{"version":3,"file":"localization.service.js","sourceRoot":"","sources":["../../../src/localization/localization.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C;IAAA;IAmBA,CAAC;IAhBG,sBAAI,0CAAS;aAAb;YACI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC;QACtC,CAAC;;;OAAA;IAED,sBAAI,gDAAe;aAAnB;YACI,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,eAAe,CAAC;QAC5C,CAAC;;;OAAA;IAED,sCAAQ,GAAR,UAAS,GAAW,EAAE,UAAkB;QACpC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACtD,CAAC;IAED,uCAAS,GAAT,UAAU,UAAkB;QACxB,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAClD,CAAC;;gBAjBJ,UAAU;;IAmBX,0BAAC;CAAA,AAnBD,IAmBC;SAlBY,mBAAmB","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalizationService {\r\n\r\n    get languages(): abp.localization.ILanguageInfo[] {\r\n        return abp.localization.languages;\r\n    }\r\n\r\n    get currentLanguage(): abp.localization.ILanguageInfo {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n\r\n    localize(key: string, sourceName: string): string {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    \r\n    getSource(sourceName: string): (key: string) => string {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n\r\n}"]}